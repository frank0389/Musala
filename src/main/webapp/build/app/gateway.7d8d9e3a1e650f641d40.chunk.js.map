{"version":3,"file":"app/gateway.7d8d9e3a1e650f641d40.chunk.js","mappings":"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","sources":["webpack://webapp/./src/app/components/dialogs/confirm/index.js","webpack://webapp/./src/app/components/dialogs/select/index.js","webpack://webapp/./src/app/components/table/search/index.js","webpack://webapp/./src/app/modules/gateway/components/layout/index.js","webpack://webapp/./src/app/components/dialogs/error/index.js","webpack://webapp/./src/app/modules/gateway/pages/gateway/new/index.js","webpack://webapp/./src/app/modules/gateway/pages/gateway/edit/index.js","webpack://webapp/./src/app/components/card/index.js","webpack://webapp/./src/app/modules/gateway/pages/gateway/view/index.js","webpack://webapp/./src/app/modules/gateway/core/rutes/index.js","webpack://webapp/./node_modules/moment/locale/ sync ^\\.\\/.*$"],"sourcesContent":["import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\nconst ConfirmDialog = (props) => {\r\n    const {onClose, onAccept, description, title, open, cancelButtonText, acceptButtonText, ...other } = props;\r\n\r\n    const handleClose = () => {\r\n        onClose();\r\n    };\r\n\r\n    const handleAccept = () => {\r\n        onAccept();\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">\r\n                {title}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    {description}\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleClose} autoFocus>{cancelButtonText}</Button>\r\n                <Button onClick={handleAccept} >\r\n                {acceptButtonText}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\n\r\nexport default ConfirmDialog;","import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport Radio from '@mui/material/Radio';\r\n\r\nconst SelectOptionDialog = (props) => {\r\n    const {onCancel, onAccept, valueProp,  options, title, open, cancelButtonText, acceptButtonText, ...other } = props;\r\n\r\n    const [value, setValue] = React.useState(valueProp);\r\n    const radioGroupRef = React.useRef(null);\r\n\r\n    React.useEffect(() => {\r\n        if (!open) {\r\n            setValue(valueProp);\r\n        }\r\n    }, [valueProp, open]);\r\n\r\n    const handleEntering = () => {\r\n        if (radioGroupRef.current != null) {\r\n            radioGroupRef.current.focus();\r\n        }\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        onCancel();\r\n    };\r\n\r\n    const handleAccept = () => {\r\n        onAccept(value);\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            sx={{ '& .MuiDialog-paper': { width: '80%', maxHeight: 435 } }}\r\n            maxWidth=\"xs\"\r\n            TransitionProps={{ onEntering: handleEntering }}\r\n            open={open}\r\n            {...other}\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">\r\n                {title}\r\n            </DialogTitle>\r\n            <DialogContent dividers>\r\n                <RadioGroup\r\n                    ref={radioGroupRef}\r\n                    aria-label=\"ringtone\"\r\n                    name=\"ringtone\"\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                >\r\n                    {options.map((option) => (\r\n                        <FormControlLabel\r\n                            value={option}\r\n                            key={option}\r\n                            control={<Radio />}\r\n                            label={option}\r\n                        />\r\n                    ))}\r\n                </RadioGroup>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button autoFocus onClick={handleCancel}>{cancelButtonText}</Button>\r\n                <Button onClick={handleAccept}>{acceptButtonText}</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\n\r\nexport default SelectOptionDialog;","import {alpha, styled} from \"@mui/material/styles\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport * as React from \"react\";\r\nimport {debounce} from \"lodash\";\r\nimport Box from \"@mui/material/Box\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport {FilterAlt} from \"@mui/icons-material\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport SelectOptionDialog from \"../../dialogs/select\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst StyledSearch = styled('div')(({theme}) => ({\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(3),\r\n        width: 'auto',\r\n    },\r\n}));\r\n\r\nconst SearchIconWrapper = styled('div')(({theme}) => ({\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n}));\r\n\r\nconst StyledInputBase = styled(InputBase)(({theme}) => ({\r\n    color: 'inherit',\r\n    '& .MuiInputBase-input': {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '20ch',\r\n        },\r\n    },\r\n}));\r\n\r\nconst Search = (props) => {\r\n    const { onSearchHandler, options} = props;\r\n\r\n    const {t} = useTranslation('search');\r\n    const [openDialog, setOpenDialog] = React.useState(false);\r\n    const [selectedOption, setSelectedOption] = React.useState(options.length?options[0]:'');\r\n\r\n    const handleSearch = debounce((event) => {\r\n        onSearchHandler(event.target.value, selectedOption);\r\n    }, 500);\r\n\r\n    const handleOption = () => {\r\n           setOpenDialog(true);\r\n    }\r\n\r\n    const handleCancelButton = () => {\r\n        setOpenDialog(false);\r\n    }\r\n\r\n    const handleAcceptButton = (value) =>  {\r\n        setSelectedOption(value);\r\n        setOpenDialog(false);\r\n    }\r\n\r\n    return (\r\n        <Box sx={{ display: \"flex\" }}>\r\n            <SelectOptionDialog onCancel={handleCancelButton} onAccept={handleAcceptButton}  valueProp={selectedOption}\r\n                                options={options} title={t('dialog.title')} open={openDialog}\r\n                                cancelButtonText={t('dialog.cancelButtonText')} acceptButtonText={t('dialog.acceptButtonText')}></SelectOptionDialog>\r\n                <StyledSearch>\r\n                    <SearchIconWrapper>\r\n                        <SearchIcon/>\r\n                    </SearchIconWrapper>\r\n                    <StyledInputBase\r\n                        placeholder={t(\"placeholder\")+\" \"+selectedOption}\r\n                        inputProps={{'aria-label': 'search'}}\r\n                        onChange={handleSearch}\r\n                    />\r\n                </StyledSearch>\r\n                <Tooltip title=\"Filter\">\r\n                    <IconButton onClick={handleOption}>\r\n                        <FilterAlt/>\r\n                    </IconButton>\r\n                </Tooltip>\r\n        </Box>\r\n    );\r\n\r\n}\r\n\r\nexport default Search;","import React from \"react\";\r\nimport Container from \"@mui/material/Container\";\r\nimport {Outlet} from \"react-router-dom\";\r\n\r\n\r\nconst  AdminLayout = (props) => {\r\n    return (\r\n        <Container maxWidth={false}>\r\n            <Outlet/>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport  default AdminLayout;","import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Alert from \"@mui/material/Alert\";\r\n\r\nconst ErrorDialog = (props) => {\r\n    const {onAccept,  description, title, open, acceptButtonText, ...other } = props;\r\n\r\n    const handleAccept = () => {\r\n        onAccept();\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={handleAccept}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">\r\n                {title}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    <Alert color=\"error\" severity=\"error\"\r\n                           sx={{ mb: 2, backgroundColor:\"transparent\" }}\r\n                    >\r\n                        {description}\r\n                    </Alert>\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleAccept}>{acceptButtonText}</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\n\r\nexport default ErrorDialog;","import React, { useState } from \"react\";\r\nimport {\r\n    Alert, Box, Button, Card, CardContent, Checkbox, Collapse,\r\n    Container, FormControlLabel, Grid, IconButton, Paper, Table,\r\n    TableBody, TableCell, TableContainer, TableHead,\r\n    TablePagination, TableRow,\r\n    TextField, Toolbar, Tooltip, Typography\r\n} from \"@mui/material\";\r\nimport Loading from \"../../../../../components/loading\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { appendGateway, createSuccessSelector, errorSelector, statusSelector } from \"../../../core/reducers/gateway\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { AddCircle, AdUnits, DeleteOutlined, Edit } from \"@mui/icons-material\";\r\nimport Search from \"../../../../../components/table/search\";\r\nimport { Stack } from \"@mui/system\";\r\nimport * as moment from 'moment';\r\nimport ConfirmDialog from \"../../../../../components/dialogs/confirm\";\r\nimport ErrorDialog from \"../../../../../components/dialogs/error\";\r\nimport { useNavigate } from \"react-router\";\r\n\r\nconst NewGateway = (props) => {\r\n\r\n    const { t } = useTranslation(\"gateway\");\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    const columns = [\r\n        { id: 'vendor', label: t('column.vendor'), minWidth: 100 },\r\n        { id: 'date', label: t('column.date'), minWidth: 100 },\r\n        { id: 'online', label: t('column.status'), minWidth: 100, },\r\n        { id: 'actions', label: t('column.actions'), minWidth: 100, align: 'center' }\r\n    ];\r\n\r\n    const [devices, setDevice] = useState([]);\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n    const error = useSelector(errorSelector);\r\n    const status = useSelector(statusSelector);\r\n    const createSuccess = useSelector(createSuccessSelector);\r\n    const [hrNameInputError, sethrNameInputError] = useState({ error: false, message: '' });\r\n    const [serialNumberInputError, setSerialNumberInputError] = useState({ error: false, message: '' });\r\n    const [ipV4InputError, setIpV4InputError] = useState({ error: false, message: '' });\r\n    const [values, setValues] = useState({\r\n        hrName: '',\r\n        serialNumber: '',\r\n        ipV4: '',\r\n        devices: []\r\n    });\r\n    const [vendorInputError, setVendorInputError] = useState({ error: false, message: '' });\r\n    const [dateInputError, setDateInputError] = useState({ error: false, message: '' });\r\n\r\n    const [dvalues, setDValues] = useState({\r\n        vendor: '',\r\n        date: '',\r\n        online: false\r\n    });\r\n\r\n    const [selectedDevice, setSelectedDevice] = useState(0);\r\n    const [openConfirmDialog, setOpenConfirmDialog] = useState(false);\r\n    const [openErrorDialog, setOpenErrorDialog] = useState(false);\r\n    const [filter, setFilter] = useState({ column: '', text: '' });\r\n\r\n    const searchOption = [t(\"column.vendor\"), t('column.date')];\r\n\r\n    const handleVendor = () => {\r\n        setVendorInputError({ error: false, message: '' });\r\n\r\n        setDValues({\r\n            ...dvalues,\r\n            vendor: event.target.value\r\n        })\r\n\r\n    }\r\n\r\n    const handleDate = (event) => {\r\n        setDateInputError({ error: false, message: '' });\r\n\r\n        setDValues({\r\n            ...dvalues,\r\n            date: event.target.value\r\n        })\r\n    }\r\n\r\n    const handleOnline = (event) => {\r\n        setDValues({\r\n            ...dvalues,\r\n            online: event.target.checked\r\n        });\r\n    };\r\n\r\n    const handleHRName = (event) => {\r\n\r\n        sethrNameInputError({ error: false, message: '' });\r\n\r\n        setValues({\r\n            ...values,\r\n            hrName: event.target.value\r\n        })\r\n    }\r\n\r\n    const handleSerialNumber = (event) => {\r\n        setSerialNumberInputError({ error: false, message: '' });\r\n\r\n        setValues({\r\n            ...values,\r\n            serialNumber: event.target.value\r\n        })\r\n\r\n    }\r\n\r\n    const handleIpV4 = (event) => {\r\n        setIpV4InputError({ error: false, message: '' });\r\n\r\n        setValues({\r\n            ...values,\r\n            ipV4: event.target.value\r\n        })\r\n    }\r\n\r\n    const handleSearch = (text, option) => {\r\n        if (text === null ||\r\n            text === undefined ||\r\n            text.length === 0) {\r\n            setFilter({ column: \"\", text: \"\" })\r\n\r\n        } else {\r\n            const column = columns.find(column => column.label === option);\r\n            if (column) {\r\n                setFilter({ column: column.id, text: text })\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n\r\n    }\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    }\r\n\r\n    const handleNewDevice = () => {\r\n\r\n        if (devices.length === 10) {\r\n            setOpenErrorDialog(true);\r\n        }\r\n        else if (dvalues.vendor == null ||\r\n            dvalues.vendor == undefined ||\r\n            dvalues.vendor.length == 0) {\r\n            setDateInputError({ error: false, message: '' });\r\n            setVendorInputError({ error: true, message: t('requiredError') });\r\n        } else if (dvalues.date == null || dvalues.date == undefined ||\r\n            dvalues.date.length == 0) {\r\n            setDateInputError({ error: false, message: t('requiredError') });\r\n            setVendorInputError({ error: true, message: '' });\r\n        } else if (moment(dvalues.date, 'YYYY-MM-DD', true).isValid() === false) {\r\n            setVendorInputError({ error: false, message: '' });\r\n            setDateInputError({ error: true, message: t('invalidDate') });\r\n\r\n        } else {\r\n            setDevice([...devices, dvalues]);\r\n            setDValues({ vendor: '', date: '', online: false })\r\n        }\r\n\r\n    }\r\n\r\n    const handleCloseConfirmDialog = () => {\r\n        setOpenConfirmDialog(false);\r\n    }\r\n    const handleAcceptConfirmDialog = () => {\r\n        setOpenConfirmDialog(false);\r\n        setDevice([\r\n            ...devices.slice(0, selectedDevice),\r\n            ...devices.slice(selectedDevice + 1),\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n    const handleAcceptErrorDialog = () => {\r\n        setOpenErrorDialog(false);\r\n    }\r\n\r\n    const handleAddGateway = () => {\r\n        var ipRegExp = /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\r\n\r\n        if (values.hrName == null ||\r\n            values.hrName == undefined ||\r\n            values.hrName.length == 0) {\r\n            setIpV4InputError({ error: false, message: '' });\r\n            sethrNameInputError({ error: true, message: t('requiredError') });\r\n        } else if (values.ipV4 == null || values.ipV4 == undefined ||\r\n            values.ipV4.length == 0) {\r\n            setIpV4InputError({ error: false, message: t('requiredError') });\r\n            sethrNameInputError({ error: true, message: '' });\r\n        }\r\n        else if (!ipRegExp.test(values.ipV4)) {\r\n            setIpV4InputError({ error: false, message: t('invalidIpError') });\r\n            sethrNameInputError({ error: true, message: '' });\r\n        \r\n        } else {\r\n            dispatch(appendGateway({hrName:values.hrName,serialNumber:values.serialNumber,ipV4:values.ipV4, devices:devices}));\r\n            setValues({\r\n                hrName: '',\r\n                serialNumber: '',\r\n                ipV4: '',\r\n                devices: []\r\n            });\r\n            setDevice([]);\r\n        }\r\n\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        navigate(\"/gateway/gateways\");\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth={false}>\r\n            <Loading open={status === 'loading' ? true : false}></Loading>\r\n            <ConfirmDialog open={openConfirmDialog} title={t('confirmDeviceDialogTitle')}\r\n                description={t('confirmDeviceDialogDescription')} onClose={handleCloseConfirmDialog}\r\n                onAccept={handleAcceptConfirmDialog} cancelButtonText={t('cancelButtonText')}\r\n                acceptButtonText={t('acceptButtonText')} />\r\n\r\n            <ErrorDialog onAccept={handleAcceptErrorDialog} description={t('appendDeviceDialogDescription')} title={t('appendDeviceDialogTitle')} open={openErrorDialog} acceptButtonText={t('acceptButtonText')} />\r\n            <Collapse in={status === 'failed'}>\r\n                <Alert color=\"error\" severity=\"error\"\r\n                    sx={{ mb: 2, backgroundColor: \"transparent\" }}\r\n                >\r\n                    {error}\r\n                </Alert>\r\n            </Collapse>\r\n            <Collapse in={createSuccess === true}>\r\n                <Alert color=\"success\" severity=\"success\"\r\n                       sx={{mb: 2, backgroundColor: \"transparent\"}}\r\n                >\r\n                    {t(\"successMessage\")}\r\n                </Alert>\r\n            </Collapse>\r\n            <Grid container maxWidth=\"md\" spacing={2}>\r\n                <Grid item xs={12}>\r\n                    <Paper>\r\n                        <Toolbar>\r\n                            <IconButton\r\n                                edge=\"start\" color=\"inherit\" aria-label=\"Profile\" sx={{ mr: 0.5 }}\r\n                            >\r\n                                <AdUnits />\r\n                            </IconButton>\r\n                            <Typography variant=\"h6\" color=\"inherit\" component=\"div\">\r\n                                {t(\"addTitle\")}\r\n                            </Typography>\r\n                        </Toolbar>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Card>\r\n                        <CardContent>\r\n                            <Box component=\"form\" noValidate sx={{ mt: 1 }}>\r\n                                <Grid container spacing={2}>\r\n                                    <Grid item xs={12} sm={4}>\r\n                                        <TextField\r\n                                            error={hrNameInputError.error}\r\n                                            helperText={hrNameInputError.message}\r\n                                            autoComplete=\"hrname\"\r\n                                            name=\"hrName\"\r\n                                            fullWidth\r\n                                            id=\"hrName\"\r\n                                            label={t('hrName')}\r\n                                            onChange={handleHRName}\r\n                                            value={values.hrName}\r\n                                            autoFocus\r\n                                            variant=\"standard\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={4}>\r\n                                        <TextField\r\n                                            error={serialNumberInputError.error}\r\n                                            helperText={serialNumberInputError.message}\r\n                                            fullWidth\r\n                                            id=\"serialNumber\"\r\n                                            label={t('serialNumber')}\r\n                                            onChange={handleSerialNumber}\r\n                                            name=\"serialNumber\"\r\n                                            value={values.serialNumber}\r\n                                            autoComplete=\"serialNumber\"\r\n                                            variant=\"standard\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={4}>\r\n                                        <TextField\r\n                                            error={ipV4InputError.error}\r\n                                            helperText={ipV4InputError.message}\r\n                                            fullWidth\r\n                                            id=\"ipV4\"\r\n                                            label={t('ipV4')}\r\n                                            onChange={handleIpV4}\r\n                                            name=\"ipV4\"\r\n                                            value={values.ipV4}\r\n                                            autoComplete=\"ipV4\"\r\n                                            variant=\"standard\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={4}>\r\n                                        <TextField\r\n                                            error={vendorInputError.error}\r\n                                            helperText={vendorInputError.message}\r\n                                            autoComplete=\"vendor\"\r\n                                            name=\"vendor\"\r\n                                            fullWidth\r\n                                            id=\"vendor\"\r\n                                            label={t('vendor')}\r\n                                            onChange={handleVendor}\r\n                                            value={dvalues.vendor}\r\n                                            autoFocus\r\n                                            variant=\"standard\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={4}>\r\n                                        <TextField\r\n                                            error={dateInputError.error}\r\n                                            helperText={dateInputError.message}\r\n                                            fullWidth\r\n                                            id=\"date\"\r\n                                            label={t('date')}\r\n                                            onChange={handleDate}\r\n                                            name=\"date\"\r\n                                            value={dvalues.date}\r\n                                            autoComplete=\"date\"\r\n                                            variant=\"standard\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={2}>\r\n                                        <FormControlLabel\r\n                                            control={<Checkbox value=\"online\" color=\"primary\"\r\n                                                checked={dvalues.online}\r\n                                                onChange={handleOnline} />}\r\n                                            label={<Typography color=\"textPrimary\"\r\n                                                gutterBottom\r\n                                                variant=\"body2\"> {t('online')}</Typography>}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={2}>\r\n                                        <Tooltip title={t('addDeviceButtonText')}>\r\n                                            <IconButton onClick={handleNewDevice} color=\"primary\">\r\n                                                <AddCircle sx={{\r\n                                                    fontSize: 40\r\n                                                }} />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Box>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Paper sx={{ width: '100%', overflow: 'hidden' }}>\r\n                        <Toolbar>\r\n                            <Box sx={{ flexGrow: 1 }} />\r\n                            <Search onSearchHandler={handleSearch} options={searchOption} />\r\n                        </Toolbar>\r\n                        <TableContainer sx={{ maxHeight: 440 }}>\r\n                            <Table stickyHeader aria-label=\"sticky table\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        {columns.map((column) => {\r\n                                            return (\r\n                                                <TableCell\r\n                                                    key={column.id}\r\n                                                    align={column.align}\r\n                                                    style={{ minWidth: column.minWidth }}>\r\n                                                    {column.label}\r\n                                                </TableCell>);\r\n                                        })\r\n                                        }\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {(rowsPerPage > 0\r\n                                        ? devices.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                        : devices\r\n                                    ).filter(device => {\r\n                                        if (filter.text == null ||\r\n                                            filter.text == undefined ||\r\n                                            filter.text.length == 0)\r\n                                            return true;\r\n                                        else {\r\n                                            return device[filter.column].includes(filter.text);\r\n                                        }\r\n                                    }\r\n                                    ).map((device, index) => {\r\n                                        return (\r\n                                            <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                                                {columns.map((column) => {\r\n\r\n                                                    if (column.id === 'actions') {\r\n                                                        return (\r\n                                                            <TableCell key={column.id} align=\"center\">\r\n                                                                <IconButton align=\"left\" onClick={() => {\r\n                                                                    setSelectedDevice(index);\r\n                                                                    setOpenConfirmDialog(true);\r\n\r\n                                                                }}>\r\n                                                                    <DeleteOutlined color=\"secondary\"></DeleteOutlined>\r\n                                                                </IconButton>\r\n                                                            </TableCell>\r\n                                                        );\r\n                                                    }\r\n\r\n                                                    const value = column.id == 'online' ? device[column.id] === true ? t(\"on\") : t(\"off\") : device[column.id];\r\n                                                    return (\r\n                                                        <TableCell key={column.id} align={column.align}>\r\n                                                            {column.format && typeof value === 'number'\r\n                                                                ? column.format(value)\r\n                                                                : value}\r\n                                                        </TableCell>\r\n                                                    );\r\n                                                })}\r\n                                            </TableRow>);\r\n                                    })\r\n                                    }\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                        <TablePagination\r\n                            rowsPerPageOptions={[5, 10]}\r\n                            component=\"div\"\r\n                            count={devices.length}\r\n                            rowsPerPage={rowsPerPage}\r\n                            page={page}\r\n                            onPageChange={handleChangePage}\r\n                            onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        />\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                        <Stack direction=\"row\" spacing={2}>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={handleCancel}\r\n                            >\r\n                                {t('cancelButtonText')}\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={handleAddGateway}\r\n                            >\r\n                                {t('acceptButtonText')}\r\n                            </Button>\r\n                        </Stack>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default NewGateway;","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    Alert, Box, Button, Card, CardContent, Checkbox, Collapse,\r\n    Container, FormControlLabel, Grid, IconButton, Paper, Table,\r\n    TableBody, TableCell, TableContainer, TableHead,\r\n    TablePagination, TableRow,\r\n    TextField, Toolbar, Tooltip, Typography\r\n} from \"@mui/material\";\r\nimport Loading from \"../../../../../components/loading\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { editedSuccessSelector, errorSelector, gatewaySelector, getGateway, statusSelector, updateGateway } from \"../../../core/reducers/gateway\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { AddCircle, AdUnits, DeleteOutlined, Edit } from \"@mui/icons-material\";\r\nimport Search from \"../../../../../components/table/search\";\r\nimport { Stack } from \"@mui/system\";\r\nimport * as moment from 'moment';\r\nimport ConfirmDialog from \"../../../../../components/dialogs/confirm\";\r\nimport ErrorDialog from \"../../../../../components/dialogs/error\";\r\nimport { useNavigate, useParams } from \"react-router\";\r\n\r\nconst EditGateway = (props) => {\r\n\r\n    const { t } = useTranslation(\"gateway\");\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    const columns = [\r\n        { id: 'vendor', label: t('column.vendor'), minWidth: 100 },\r\n        { id: 'date', label: t('column.date'), minWidth: 100 },\r\n        { id: 'online', label: t('column.status'), minWidth: 100, },\r\n        { id: 'actions', label: t('column.actions'), minWidth: 100, align: 'center' }\r\n    ];\r\n\r\n    const [devices, setDevice] = useState([]);\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n    const {id} = useParams();\r\n    const error = useSelector(errorSelector);\r\n    const status = useSelector(statusSelector);\r\n    const editedSuccess = useSelector(editedSuccessSelector);\r\n    const currentGateway = useSelector(gatewaySelector);\r\n\r\n    const [hrNameInputError, sethrNameInputError] = useState({ error: false, message: '' });\r\n    const [serialNumberInputError, setSerialNumberInputError] = useState({ error: false, message: '' });\r\n    const [ipV4InputError, setIpV4InputError] = useState({ error: false, message: '' });\r\n    const [values, setValues] = useState(null);\r\n    const [vendorInputError, setVendorInputError] = useState({ error: false, message: '' });\r\n    const [dateInputError, setDateInputError] = useState({ error: false, message: '' });\r\n\r\n    const [dvalues, setDValues] = useState({\r\n        vendor: '',\r\n        date: '',\r\n        online: false\r\n    });\r\n\r\n    const [selectedDevice, setSelectedDevice] = useState(0);\r\n    const [openConfirmDialog, setOpenConfirmDialog] = useState(false);\r\n    const [openErrorDialog, setOpenErrorDialog] = useState(false);\r\n    const [filter, setFilter] = useState({ column: '', text: '' });\r\n\r\n    const searchOption = [t(\"column.vendor\"), t('column.date')];\r\n    \r\n    useEffect(() => {\r\n        dispatch(getGateway(id))\r\n    }, [id])\r\n\r\n    //This useeffect is for update user attr\r\n    useEffect(() => {\r\n\r\n        if(currentGateway != null)  {\r\n        setValues(currentGateway);\r\n        if(currentGateway.devices != null)\r\n          setDevice(currentGateway.devices);\r\n    }\r\n       \r\n   }, [currentGateway])\r\n\r\n\r\n    const handleVendor = () => {\r\n        setVendorInputError({ error: false, message: '' });\r\n\r\n        setDValues({\r\n            ...dvalues,\r\n            vendor: event.target.value\r\n        })\r\n\r\n    }\r\n\r\n    const handleDate = (event) => {\r\n        setDateInputError({ error: false, message: '' });\r\n\r\n        setDValues({\r\n            ...dvalues,\r\n            date: event.target.value\r\n        })\r\n    }\r\n\r\n    const handleOnline = (event) => {\r\n        setDValues({\r\n            ...dvalues,\r\n            online: event.target.checked\r\n        });\r\n    };\r\n\r\n    const handleHRName = (event) => {\r\n\r\n        sethrNameInputError({ error: false, message: '' });\r\n\r\n        setValues({\r\n            ...values,\r\n            hrName: event.target.value\r\n        })\r\n    }\r\n\r\n    const handleSerialNumber = (event) => {\r\n        setSerialNumberInputError({ error: false, message: '' });\r\n\r\n        setValues({\r\n            ...values,\r\n            serialNumber: event.target.value\r\n        })\r\n\r\n    }\r\n\r\n    const handleIpV4 = (event) => {\r\n        setIpV4InputError({ error: false, message: '' });\r\n\r\n        setValues({\r\n            ...values,\r\n            ipV4: event.target.value\r\n        })\r\n    }\r\n\r\n    const handleSearch = (text, option) => {\r\n        if (text === null ||\r\n            text === undefined ||\r\n            text.length === 0) {\r\n            setFilter({ column: \"\", text: \"\" })\r\n\r\n        } else {\r\n            const column = columns.find(column => column.label === option);\r\n            if (column) {\r\n                setFilter({ column: column.id, text: text })\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n\r\n    }\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    }\r\n\r\n    const handleNewDevice = () => {\r\n\r\n        if (devices.length === 10) {\r\n            setOpenErrorDialog(true);\r\n        }\r\n        else if (dvalues.vendor == null ||\r\n            dvalues.vendor == undefined ||\r\n            dvalues.vendor.length == 0) {\r\n            setDateInputError({ error: false, message: '' });\r\n            setVendorInputError({ error: true, message: t('requiredError') });\r\n        } else if (dvalues.date == null || dvalues.date == undefined ||\r\n            dvalues.date.length == 0) {\r\n            setDateInputError({ error: false, message: t('requiredError') });\r\n            setVendorInputError({ error: true, message: '' });\r\n        } else if (moment(dvalues.date, 'YYYY-MM-DD', true).isValid() === false) {\r\n            setVendorInputError({ error: false, message: '' });\r\n            setDateInputError({ error: true, message: t('invalidDate') });\r\n\r\n        } else {\r\n            setDevice([...devices, dvalues]);\r\n            setDValues({ vendor: '', date: '', online: false })\r\n        }\r\n\r\n    }\r\n\r\n    const handleCloseConfirmDialog = () => {\r\n        setOpenConfirmDialog(false);\r\n    }\r\n    const handleAcceptConfirmDialog = () => {\r\n        setOpenConfirmDialog(false);\r\n        setDevice([\r\n            ...devices.slice(0, selectedDevice),\r\n            ...devices.slice(selectedDevice + 1),\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n    const handleAcceptErrorDialog = () => {\r\n        setOpenErrorDialog(false);\r\n    }\r\n\r\n    const handleUpdateGateway = () => {\r\n        var ipRegExp = /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\r\n\r\n        if (values.hrName == null ||\r\n            values.hrName == undefined ||\r\n            values.hrName.length == 0) {\r\n            setIpV4InputError({ error: false, message: '' });\r\n            sethrNameInputError({ error: true, message: t('requiredError') });\r\n        } else if (values.ipV4 == null || values.ipV4 == undefined ||\r\n            values.ipV4.length == 0) {\r\n            setIpV4InputError({ error: false, message: t('requiredError') });\r\n            sethrNameInputError({ error: true, message: '' });\r\n        }\r\n        else if (!ipRegExp.test(values.ipV4)) {\r\n            setIpV4InputError({ error: false, message: t('invalidIpError') });\r\n            sethrNameInputError({ error: true, message: '' });\r\n        \r\n        } else {\r\n            dispatch(updateGateway({id:values.id,hrName:values.hrName,serialNumber:values.serialNumber,ipV4:values.ipV4, devices:devices}));\r\n        }\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        navigate(\"/gateway/gateways\");\r\n    }\r\n\r\n    if(values === null )\r\n       return <Loading open={true} />\r\n\r\n    return (\r\n        <Container maxWidth={false}>\r\n            <Loading open={status === 'loading' ? true : false}></Loading>\r\n            <ConfirmDialog open={openConfirmDialog} title={t('confirmDeviceDialogTitle')}\r\n                description={t('confirmDeviceDialogDescription')} onClose={handleCloseConfirmDialog}\r\n                onAccept={handleAcceptConfirmDialog} cancelButtonText={t('cancelButtonText')}\r\n                acceptButtonText={t('acceptButtonText')} />\r\n\r\n            <ErrorDialog onAccept={handleAcceptErrorDialog} description={t('appendDeviceDialogDescription')} title={t('appendDeviceDialogTitle')} open={openErrorDialog} acceptButtonText={t('acceptButtonText')} />\r\n            <Collapse in={status === 'failed'}>\r\n                <Alert color=\"error\" severity=\"error\"\r\n                    sx={{ mb: 2, backgroundColor: \"transparent\" }}\r\n                >\r\n                    {error}\r\n                </Alert>\r\n            </Collapse>\r\n            <Collapse in={editedSuccess === true}>\r\n                <Alert color=\"success\" severity=\"success\"\r\n                       sx={{mb: 2, backgroundColor: \"transparent\"}}\r\n                >\r\n                    {t(\"editSuccessMessage\")}\r\n                </Alert>\r\n            </Collapse>\r\n            <Grid container maxWidth=\"md\" spacing={2}>\r\n                <Grid item xs={12}>\r\n                    <Paper>\r\n                        <Toolbar>\r\n                            <IconButton\r\n                                edge=\"start\" color=\"inherit\" aria-label=\"Profile\" sx={{ mr: 0.5 }}\r\n                            >\r\n                                <AdUnits />\r\n                            </IconButton>\r\n                            <Typography variant=\"h6\" color=\"inherit\" component=\"div\">\r\n                                {t(\"editTitle\")}\r\n                            </Typography>\r\n                        </Toolbar>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Card>\r\n                        <CardContent>\r\n                            <Box component=\"form\" noValidate sx={{ mt: 1 }}>\r\n                                <Grid container spacing={2}>\r\n                                    <Grid item xs={12} sm={4}>\r\n                                        <TextField\r\n                                            error={hrNameInputError.error}\r\n                                            helperText={hrNameInputError.message}\r\n                                            autoComplete=\"hrname\"\r\n                                            name=\"hrName\"\r\n                                            fullWidth\r\n                                            id=\"hrName\"\r\n                                            label={t('hrName')}\r\n                                            onChange={handleHRName}\r\n                                            value={values.hrName}\r\n                                            autoFocus\r\n                                            variant=\"standard\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={4}>\r\n                                        <TextField\r\n                                            error={serialNumberInputError.error}\r\n                                            helperText={serialNumberInputError.message}\r\n                                            fullWidth\r\n                                            id=\"serialNumber\"\r\n                                            label={t('serialNumber')}\r\n                                            onChange={handleSerialNumber}\r\n                                            name=\"serialNumber\"\r\n                                            value={values.serialNumber}\r\n                                            autoComplete=\"serialNumber\"\r\n                                            variant=\"standard\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={4}>\r\n                                        <TextField\r\n                                            error={ipV4InputError.error}\r\n                                            helperText={ipV4InputError.message}\r\n                                            fullWidth\r\n                                            id=\"ipV4\"\r\n                                            label={t('ipV4')}\r\n                                            onChange={handleIpV4}\r\n                                            name=\"ipV4\"\r\n                                            value={values.ipV4}\r\n                                            autoComplete=\"ipV4\"\r\n                                            variant=\"standard\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={4}>\r\n                                        <TextField\r\n                                            error={vendorInputError.error}\r\n                                            helperText={vendorInputError.message}\r\n                                            autoComplete=\"vendor\"\r\n                                            name=\"vendor\"\r\n                                            fullWidth\r\n                                            id=\"vendor\"\r\n                                            label={t('vendor')}\r\n                                            onChange={handleVendor}\r\n                                            value={dvalues.vendor}\r\n                                            autoFocus\r\n                                            variant=\"standard\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={4}>\r\n                                        <TextField\r\n                                            error={dateInputError.error}\r\n                                            helperText={dateInputError.message}\r\n                                            fullWidth\r\n                                            id=\"date\"\r\n                                            label={t('date')}\r\n                                            onChange={handleDate}\r\n                                            name=\"date\"\r\n                                            value={dvalues.date}\r\n                                            autoComplete=\"date\"\r\n                                            variant=\"standard\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={2}>\r\n                                        <FormControlLabel\r\n                                            control={<Checkbox value=\"online\" color=\"primary\"\r\n                                                checked={dvalues.online}\r\n                                                onChange={handleOnline} />}\r\n                                            label={<Typography color=\"textPrimary\"\r\n                                                gutterBottom\r\n                                                variant=\"body2\"> {t('online')}</Typography>}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={2}>\r\n                                        <Tooltip title={t('addDeviceButtonText')}>\r\n                                            <IconButton onClick={handleNewDevice} color=\"primary\">\r\n                                                <AddCircle sx={{\r\n                                                    fontSize: 40\r\n                                                }} />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Box>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Paper sx={{ width: '100%', overflow: 'hidden' }}>\r\n                        <Toolbar>\r\n                            <Box sx={{ flexGrow: 1 }} />\r\n                            <Search onSearchHandler={handleSearch} options={searchOption} />\r\n                        </Toolbar>\r\n                        <TableContainer sx={{ maxHeight: 440 }}>\r\n                            <Table stickyHeader aria-label=\"sticky table\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        {columns.map((column) => {\r\n                                            return (\r\n                                                <TableCell\r\n                                                    key={column.id}\r\n                                                    align={column.align}\r\n                                                    style={{ minWidth: column.minWidth }}>\r\n                                                    {column.label}\r\n                                                </TableCell>);\r\n                                        })\r\n                                        }\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {(rowsPerPage > 0\r\n                                        ? devices.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                        : devices\r\n                                    ).filter(device => {\r\n                                        if (filter.text == null ||\r\n                                            filter.text == undefined ||\r\n                                            filter.text.length == 0)\r\n                                            return true;\r\n                                        else {\r\n                                            return device[filter.column].includes(filter.text);\r\n                                        }\r\n                                    }\r\n                                    ).map((device, index) => {\r\n                                        return (\r\n                                            <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                                                {columns.map((column) => {\r\n\r\n                                                    if (column.id === 'actions') {\r\n                                                        return (\r\n                                                            <TableCell key={column.id} align=\"center\">\r\n                                                                <IconButton align=\"left\" onClick={() => {\r\n                                                                    setSelectedDevice(index);\r\n                                                                    setOpenConfirmDialog(true);\r\n\r\n                                                                }}>\r\n                                                                    <DeleteOutlined color=\"secondary\"></DeleteOutlined>\r\n                                                                </IconButton>\r\n                                                            </TableCell>\r\n                                                        );\r\n                                                    }\r\n\r\n                                                    const value = column.id == 'online' ? device[column.id] === true ? t(\"on\") : t(\"off\") : device[column.id];\r\n                                                    return (\r\n                                                        <TableCell key={column.id} align={column.align}>\r\n                                                            {column.format && typeof value === 'number'\r\n                                                                ? column.format(value)\r\n                                                                : value}\r\n                                                        </TableCell>\r\n                                                    );\r\n                                                })}\r\n                                            </TableRow>);\r\n                                    })\r\n                                    }\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                        <TablePagination\r\n                            rowsPerPageOptions={[5, 10]}\r\n                            component=\"div\"\r\n                            count={devices.length}\r\n                            rowsPerPage={rowsPerPage}\r\n                            page={page}\r\n                            onPageChange={handleChangePage}\r\n                            onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        />\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                        <Stack direction=\"row\" spacing={2}>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={handleCancel}\r\n                            >\r\n                                {t('cancelButtonText')}\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={handleUpdateGateway}\r\n                            >\r\n                                {t('acceptButtonText')}\r\n                            </Button>\r\n                        </Stack>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default EditGateway;","import { Card, CardContent, Grid, Typography } from '@mui/material';\r\n\r\nconst CustomCard = (props) => {\r\n    const {\r\n        label,\r\n        value,\r\n        icon,\r\n        description,\r\n        ...other\r\n    } = props;\r\n  return (\r\n        <Card >\r\n            <CardContent>\r\n                <Grid\r\n                    container\r\n                    spacing={3}\r\n                    sx={{ justifyContent: 'space-between' }}\r\n                >\r\n                    <Grid item>\r\n                    <Typography\r\n                        color=\"textSecondary\"\r\n                        gutterBottom\r\n                        variant=\"overline\"\r\n                    >\r\n                        {label}\r\n                    </Typography>\r\n                    <Typography\r\n                        color=\"textPrimary\"\r\n                        variant=\"h4\"\r\n                    >\r\n                       {value}\r\n                    </Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                     {icon}\r\n                    </Grid>\r\n                </Grid>\r\n                    {description}\r\n        </CardContent>\r\n  </Card>)\r\n};\r\n\r\n\r\nexport default CustomCard;","import React, { useEffect, useState } from \"react\";\r\nimport { Alert, Avatar, Box, Collapse, Container, IconButton, TablePagination, Toolbar, Tooltip, Typography } from \"@mui/material\";\r\nimport { AddCircle, AdUnits, DeleteOutlined, Edit } from \"@mui/icons-material\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Grid from '@mui/material/Grid';\r\nimport { errorSelector, gatewaysSelector, getGateways, removeGateway, statusSelector, totalItemsSelector } from \"../../../core/reducers/gateway\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router\";\r\n\r\nimport Loading from \"../../../../../components/loading\";\r\nimport Search from \"../../../../../components/table/search\";\r\nimport ConfirmDialog from \"../../../../../components/dialogs/confirm\";\r\nimport CustomCard from \"../../../../../components/card\";\r\n\r\n\r\nconst Gateways = (props) => {\r\n\r\n    const { t } = useTranslation(\"gateway\");\r\n    const columns = [\r\n        {id: 'id', label: 'ID',  sort: true},\r\n        {id: 'serialNumber', label: t(\"serialNumber\"), sort: true},\r\n        {id: 'hrName', label: t(\"hrName\"), sort: true},\r\n        {id: 'ipV4', label: t('ipV4'), sort: true},\r\n    ];\r\n    const searchOption = [t(\"serialNumber\"), t(\"hrName\"),t(\"ipV4\")];\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    const error = useSelector(errorSelector);\r\n    const status = useSelector(statusSelector);\r\n    const gateways = useSelector(gatewaysSelector);\r\n    const totalItems = useSelector(totalItemsSelector);\r\n\r\n\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(6);\r\n    const [sort, setSort] = useState({ property: 'id', direction: 'asc' });\r\n    const [filter, setFilter] = useState({ column: '', text: '' });\r\n    const [openConfirmDialog, setOpenConfirmDialog] = useState(false);\r\n    const [selectedGateway, setSelectedGateway] = React.useState('');\r\n\r\n\r\n    const handleSearch = (text, option) => {\r\n\r\n        if (text === null ||\r\n            text === undefined ||\r\n            text.length === 0) {\r\n            setFilter({column: \"\", text: \"\"})\r\n            dispatch(getGateways(\"\", \"\", page, rowsPerPage, sort));\r\n\r\n        } else {\r\n            const column = columns.find(column => column.label === option);\r\n            if (column) {\r\n                setFilter({column: column.id, text: text})\r\n                dispatch(getGateways(column.id, text, page, rowsPerPage, sort));\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const handleNewGateway = () => {\r\n        navigate(\"/gateway/gateways/new\")\r\n    }\r\n\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n        dispatch(getGateways(filter.column, filter.text, newPage, rowsPerPage, sort));\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n        dispatch(getGateways(filter.column, filter.text, 0, event.target.value, sort));\r\n    };\r\n\r\n    const handleCloseConfirmDialog = () => {\r\n        setOpenConfirmDialog(false);\r\n    }\r\n    const handleAcceptConfirmDialog = () => {\r\n        setOpenConfirmDialog(false);\r\n        dispatch(removeGateway(selectedGateway, filter.column, filter.text, page, rowsPerPage, sort));\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            dispatch(getGateways(filter.column, filter.text, page, rowsPerPage, sort));\r\n        }, [])\r\n\r\n\r\n    return (\r\n        <Container maxWidth={false}>\r\n            <Loading open={status === 'loading' ? true : false}></Loading>\r\n            <ConfirmDialog open={openConfirmDialog} title={t('confirmDialogTitle')}\r\n                           description={t('confirmDialogDescription')} onClose={handleCloseConfirmDialog}\r\n                           onAccept={handleAcceptConfirmDialog} cancelButtonText={t('cancelButtonText')}\r\n                           acceptButtonText={t('acceptButtonText')}/>\r\n            <Collapse in={status === 'failed'}>\r\n                <Alert color=\"error\" severity=\"error\"\r\n                    sx={{ mb: 2, backgroundColor: \"transparent\" }}\r\n                >\r\n                    {error}\r\n                </Alert>\r\n            </Collapse>\r\n            <Toolbar>\r\n                <Box sx={{ flexGrow: 1 }} />\r\n                <Search onSearchHandler={handleSearch} options={searchOption} />\r\n                <Tooltip title={t('add')}>\r\n                    <IconButton onClick={handleNewGateway} color=\"primary\">\r\n                        <AddCircle sx={{\r\n                            fontSize: 40\r\n                        }} />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </Toolbar>\r\n            \r\n            <Grid container justifyContent=\"flex-start\"\r\n                alignItems=\"flex-start\"\r\n                spacing={1}>\r\n                {\r\n                    gateways.map(gateway => {\r\n                        return (\r\n\r\n                            <Grid item md={4} key={gateway.id}  xs={12}>\r\n                                <CustomCard label={gateway.hrName} value={gateway.ipV4} icon={<Avatar\r\n                                    sx={{ height: 75, width: 75, backgroundColor: 'success.main' }}\r\n                                >\r\n                                    <AdUnits sx={{\r\n                                        height: 54,\r\n                                        width: 54\r\n                                    }}/>\r\n                                </Avatar>} description={\r\n                                    <Box\r\n                                        sx={{\r\n                                            alignItems: 'center',\r\n                                            display: 'flex',\r\n                                            pt: 2\r\n                                        }}\r\n                                    >\r\n                                        <Typography\r\n                                            variant=\"body2\"\r\n                                            sx={{\r\n                                                mr: 1,\r\n                                                ml: 1\r\n                                            }}\r\n                                        >\r\n                                            {\"SN:\"+gateway.serialNumber}\r\n                                        </Typography>\r\n                                        <Box sx={{ flexGrow: 1 }} />\r\n                                        <IconButton onClick={() => {\r\n                                            navigate(\"/gateway/gateways/\"+gateway.id);\r\n\r\n                                        }}>\r\n                                            <Edit/>\r\n                                        </IconButton>\r\n                                        <IconButton onClick={() => {\r\n                                            setSelectedGateway(gateway.id);\r\n                                            setOpenConfirmDialog(true);\r\n\r\n                                        }}>\r\n                                            <DeleteOutlined color=\"secondary\"></DeleteOutlined>\r\n                                        </IconButton>\r\n                                    </Box>\r\n                                } />\r\n                            </Grid>\r\n                    )})\r\n                }\r\n            </Grid>\r\n            <TablePagination \r\n                rowsPerPageOptions={[6, 9]}\r\n                component=\"div\"\r\n                count={parseInt(totalItems)}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onPageChange={handleChangePage}\r\n                onRowsPerPageChange={handleChangeRowsPerPage}\r\n                sx={{position: 'fixed', bottom:'10px', right:0}}\r\n            />\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Gateways;","import { Route, Routes} from \"react-router-dom\";\r\nimport React, {lazy} from \"react\";\r\nimport AdminLayout  from \"../../components/layout\";\r\nimport NewGateway from \"../../pages/gateway/new\";\r\nimport EditGateway from \"../../pages/gateway/edit\";\r\nimport GatewayView from \"../../pages/gateway/view\";\r\n\r\n\r\n\r\nconst  Gateway = (props) => {\r\n     //These routes are defined when this component is loaded on demand via dynamic import on the main layout\r\n    return (\r\n       <Routes>\r\n                <Route path=\"gateways/*\" element={<AdminLayout/>}>\r\n                    <Route index element={<GatewayView/>}/>\r\n                    <Route path=\"new\" element={<NewGateway/>}/>\r\n                    <Route path=\":id\" element={<EditGateway/>}/>\r\n                </Route>\r\n       </Routes>\r\n    );\r\n}\r\n\r\nexport  default Gateway;","var map = {\n\t\"./af\": 42786,\n\t\"./af.js\": 42786,\n\t\"./ar\": 30867,\n\t\"./ar-dz\": 14130,\n\t\"./ar-dz.js\": 14130,\n\t\"./ar-kw\": 96135,\n\t\"./ar-kw.js\": 96135,\n\t\"./ar-ly\": 56440,\n\t\"./ar-ly.js\": 56440,\n\t\"./ar-ma\": 47702,\n\t\"./ar-ma.js\": 47702,\n\t\"./ar-sa\": 16040,\n\t\"./ar-sa.js\": 16040,\n\t\"./ar-tn\": 37100,\n\t\"./ar-tn.js\": 37100,\n\t\"./ar.js\": 30867,\n\t\"./az\": 31083,\n\t\"./az.js\": 31083,\n\t\"./be\": 9808,\n\t\"./be.js\": 9808,\n\t\"./bg\": 68338,\n\t\"./bg.js\": 68338,\n\t\"./bm\": 67438,\n\t\"./bm.js\": 67438,\n\t\"./bn\": 8905,\n\t\"./bn-bd\": 76225,\n\t\"./bn-bd.js\": 76225,\n\t\"./bn.js\": 8905,\n\t\"./bo\": 11560,\n\t\"./bo.js\": 11560,\n\t\"./br\": 1278,\n\t\"./br.js\": 1278,\n\t\"./bs\": 80622,\n\t\"./bs.js\": 80622,\n\t\"./ca\": 2468,\n\t\"./ca.js\": 2468,\n\t\"./cs\": 5822,\n\t\"./cs.js\": 5822,\n\t\"./cv\": 50877,\n\t\"./cv.js\": 50877,\n\t\"./cy\": 47373,\n\t\"./cy.js\": 47373,\n\t\"./da\": 24780,\n\t\"./da.js\": 24780,\n\t\"./de\": 59740,\n\t\"./de-at\": 60217,\n\t\"./de-at.js\": 60217,\n\t\"./de-ch\": 60894,\n\t\"./de-ch.js\": 60894,\n\t\"./de.js\": 59740,\n\t\"./dv\": 5300,\n\t\"./dv.js\": 5300,\n\t\"./el\": 50837,\n\t\"./el.js\": 50837,\n\t\"./en-au\": 78348,\n\t\"./en-au.js\": 78348,\n\t\"./en-ca\": 77925,\n\t\"./en-ca.js\": 77925,\n\t\"./en-gb\": 22243,\n\t\"./en-gb.js\": 22243,\n\t\"./en-ie\": 46436,\n\t\"./en-ie.js\": 46436,\n\t\"./en-il\": 47207,\n\t\"./en-il.js\": 47207,\n\t\"./en-in\": 44175,\n\t\"./en-in.js\": 44175,\n\t\"./en-nz\": 76319,\n\t\"./en-nz.js\": 76319,\n\t\"./en-sg\": 31662,\n\t\"./en-sg.js\": 31662,\n\t\"./eo\": 92915,\n\t\"./eo.js\": 92915,\n\t\"./es\": 55655,\n\t\"./es-do\": 55251,\n\t\"./es-do.js\": 55251,\n\t\"./es-mx\": 96112,\n\t\"./es-mx.js\": 96112,\n\t\"./es-us\": 71146,\n\t\"./es-us.js\": 71146,\n\t\"./es.js\": 55655,\n\t\"./et\": 5603,\n\t\"./et.js\": 5603,\n\t\"./eu\": 77763,\n\t\"./eu.js\": 77763,\n\t\"./fa\": 76959,\n\t\"./fa.js\": 76959,\n\t\"./fi\": 11897,\n\t\"./fi.js\": 11897,\n\t\"./fil\": 42549,\n\t\"./fil.js\": 42549,\n\t\"./fo\": 94694,\n\t\"./fo.js\": 94694,\n\t\"./fr\": 94470,\n\t\"./fr-ca\": 63049,\n\t\"./fr-ca.js\": 63049,\n\t\"./fr-ch\": 52330,\n\t\"./fr-ch.js\": 52330,\n\t\"./fr.js\": 94470,\n\t\"./fy\": 5044,\n\t\"./fy.js\": 5044,\n\t\"./ga\": 29295,\n\t\"./ga.js\": 29295,\n\t\"./gd\": 2101,\n\t\"./gd.js\": 2101,\n\t\"./gl\": 38794,\n\t\"./gl.js\": 38794,\n\t\"./gom-deva\": 27884,\n\t\"./gom-deva.js\": 27884,\n\t\"./gom-latn\": 23168,\n\t\"./gom-latn.js\": 23168,\n\t\"./gu\": 95349,\n\t\"./gu.js\": 95349,\n\t\"./he\": 24206,\n\t\"./he.js\": 24206,\n\t\"./hi\": 30094,\n\t\"./hi.js\": 30094,\n\t\"./hr\": 30316,\n\t\"./hr.js\": 30316,\n\t\"./hu\": 22138,\n\t\"./hu.js\": 22138,\n\t\"./hy-am\": 11423,\n\t\"./hy-am.js\": 11423,\n\t\"./id\": 29218,\n\t\"./id.js\": 29218,\n\t\"./is\": 90135,\n\t\"./is.js\": 90135,\n\t\"./it\": 90626,\n\t\"./it-ch\": 10150,\n\t\"./it-ch.js\": 10150,\n\t\"./it.js\": 90626,\n\t\"./ja\": 39183,\n\t\"./ja.js\": 39183,\n\t\"./jv\": 24286,\n\t\"./jv.js\": 24286,\n\t\"./ka\": 12105,\n\t\"./ka.js\": 12105,\n\t\"./kk\": 47772,\n\t\"./kk.js\": 47772,\n\t\"./km\": 18758,\n\t\"./km.js\": 18758,\n\t\"./kn\": 79282,\n\t\"./kn.js\": 79282,\n\t\"./ko\": 33730,\n\t\"./ko.js\": 33730,\n\t\"./ku\": 1408,\n\t\"./ku.js\": 1408,\n\t\"./ky\": 33291,\n\t\"./ky.js\": 33291,\n\t\"./lb\": 36841,\n\t\"./lb.js\": 36841,\n\t\"./lo\": 55466,\n\t\"./lo.js\": 55466,\n\t\"./lt\": 57010,\n\t\"./lt.js\": 57010,\n\t\"./lv\": 37595,\n\t\"./lv.js\": 37595,\n\t\"./me\": 39861,\n\t\"./me.js\": 39861,\n\t\"./mi\": 35493,\n\t\"./mi.js\": 35493,\n\t\"./mk\": 95966,\n\t\"./mk.js\": 95966,\n\t\"./ml\": 87341,\n\t\"./ml.js\": 87341,\n\t\"./mn\": 5115,\n\t\"./mn.js\": 5115,\n\t\"./mr\": 10370,\n\t\"./mr.js\": 10370,\n\t\"./ms\": 9847,\n\t\"./ms-my\": 41237,\n\t\"./ms-my.js\": 41237,\n\t\"./ms.js\": 9847,\n\t\"./mt\": 72126,\n\t\"./mt.js\": 72126,\n\t\"./my\": 56165,\n\t\"./my.js\": 56165,\n\t\"./nb\": 64924,\n\t\"./nb.js\": 64924,\n\t\"./ne\": 16744,\n\t\"./ne.js\": 16744,\n\t\"./nl\": 93901,\n\t\"./nl-be\": 59814,\n\t\"./nl-be.js\": 59814,\n\t\"./nl.js\": 93901,\n\t\"./nn\": 83877,\n\t\"./nn.js\": 83877,\n\t\"./oc-lnc\": 92135,\n\t\"./oc-lnc.js\": 92135,\n\t\"./pa-in\": 15858,\n\t\"./pa-in.js\": 15858,\n\t\"./pl\": 64495,\n\t\"./pl.js\": 64495,\n\t\"./pt\": 89520,\n\t\"./pt-br\": 57971,\n\t\"./pt-br.js\": 57971,\n\t\"./pt.js\": 89520,\n\t\"./ro\": 96459,\n\t\"./ro.js\": 96459,\n\t\"./ru\": 21793,\n\t\"./ru.js\": 21793,\n\t\"./sd\": 40950,\n\t\"./sd.js\": 40950,\n\t\"./se\": 10490,\n\t\"./se.js\": 10490,\n\t\"./si\": 90124,\n\t\"./si.js\": 90124,\n\t\"./sk\": 64249,\n\t\"./sk.js\": 64249,\n\t\"./sl\": 14985,\n\t\"./sl.js\": 14985,\n\t\"./sq\": 51104,\n\t\"./sq.js\": 51104,\n\t\"./sr\": 49131,\n\t\"./sr-cyrl\": 79915,\n\t\"./sr-cyrl.js\": 79915,\n\t\"./sr.js\": 49131,\n\t\"./ss\": 95606,\n\t\"./ss.js\": 95606,\n\t\"./sv\": 98760,\n\t\"./sv.js\": 98760,\n\t\"./sw\": 91172,\n\t\"./sw.js\": 91172,\n\t\"./ta\": 27333,\n\t\"./ta.js\": 27333,\n\t\"./te\": 23110,\n\t\"./te.js\": 23110,\n\t\"./tet\": 52095,\n\t\"./tet.js\": 52095,\n\t\"./tg\": 27321,\n\t\"./tg.js\": 27321,\n\t\"./th\": 9041,\n\t\"./th.js\": 9041,\n\t\"./tk\": 19005,\n\t\"./tk.js\": 19005,\n\t\"./tl-ph\": 75768,\n\t\"./tl-ph.js\": 75768,\n\t\"./tlh\": 89444,\n\t\"./tlh.js\": 89444,\n\t\"./tr\": 72397,\n\t\"./tr.js\": 72397,\n\t\"./tzl\": 28254,\n\t\"./tzl.js\": 28254,\n\t\"./tzm\": 51106,\n\t\"./tzm-latn\": 30699,\n\t\"./tzm-latn.js\": 30699,\n\t\"./tzm.js\": 51106,\n\t\"./ug-cn\": 9288,\n\t\"./ug-cn.js\": 9288,\n\t\"./uk\": 67691,\n\t\"./uk.js\": 67691,\n\t\"./ur\": 13795,\n\t\"./ur.js\": 13795,\n\t\"./uz\": 6791,\n\t\"./uz-latn\": 60588,\n\t\"./uz-latn.js\": 60588,\n\t\"./uz.js\": 6791,\n\t\"./vi\": 65666,\n\t\"./vi.js\": 65666,\n\t\"./x-pseudo\": 14378,\n\t\"./x-pseudo.js\": 14378,\n\t\"./yo\": 75805,\n\t\"./yo.js\": 75805,\n\t\"./zh-cn\": 83839,\n\t\"./zh-cn.js\": 83839,\n\t\"./zh-hk\": 55726,\n\t\"./zh-hk.js\": 55726,\n\t\"./zh-mo\": 99807,\n\t\"./zh-mo.js\": 99807,\n\t\"./zh-tw\": 74152,\n\t\"./zh-tw.js\": 74152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;"],"names":["props","onClose","onAccept","description","title","open","cancelButtonText","acceptButtonText","handleClose","id","onClick","autoFocus","onCancel","valueProp","options","other","React","value","setValue","radioGroupRef","Dialog","sx","width","maxHeight","maxWidth","TransitionProps","onEntering","current","focus","DialogTitle","DialogContent","dividers","RadioGroup","ref","name","onChange","event","target","map","option","FormControlLabel","control","Radio","label","DialogActions","Button","StyledSearch","styled","theme","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","marginRight","spacing","marginLeft","breakpoints","up","SearchIconWrapper","padding","height","pointerEvents","display","alignItems","justifyContent","StyledInputBase","InputBase","color","paddingLeft","transition","transitions","create","onSearchHandler","t","useTranslation","openDialog","setOpenDialog","length","selectedOption","setSelectedOption","handleSearch","debounce","Box","placeholder","inputProps","Tooltip","IconButton","FilterAlt","Container","handleAccept","DialogContentText","Alert","severity","mb","dispatch","useDispatch","navigate","useNavigate","columns","minWidth","align","useState","devices","setDevice","page","setPage","rowsPerPage","setRowsPerPage","error","useSelector","errorSelector","status","statusSelector","createSuccess","createSuccessSelector","message","hrNameInputError","sethrNameInputError","serialNumberInputError","setSerialNumberInputError","ipV4InputError","setIpV4InputError","hrName","serialNumber","ipV4","values","setValues","vendorInputError","setVendorInputError","dateInputError","setDateInputError","vendor","date","online","dvalues","setDValues","selectedDevice","setSelectedDevice","openConfirmDialog","setOpenConfirmDialog","openErrorDialog","setOpenErrorDialog","column","text","filter","setFilter","searchOption","slice","Collapse","in","Grid","container","item","xs","Paper","Toolbar","edge","mr","AdUnits","Typography","variant","component","Card","CardContent","noValidate","mt","sm","TextField","helperText","autoComplete","fullWidth","Checkbox","checked","gutterBottom","undefined","moment","isValid","AddCircle","fontSize","overflow","flexGrow","find","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","style","TableBody","device","includes","index","hover","role","tabIndex","DeleteOutlined","format","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","Stack","direction","test","appendGateway","useParams","editedSuccess","editedSuccessSelector","currentGateway","gatewaySelector","useEffect","getGateway","updateGateway","icon","sort","gateways","gatewaysSelector","totalItems","totalItemsSelector","property","selectedGateway","setSelectedGateway","getGateways","removeGateway","gateway","md","Avatar","pt","ml","Edit","parseInt","bottom","right","path","element","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports"],"sourceRoot":""}